abstract class Shape{ // It is a class for which a user cannot create objects
	abstract void draw(); // It is a function which will have no body // It can only be declared in an abstract class
	int a;
	Shape(){
		a = 10;
	}
	void fun(){
		System.out.println("This is fun");
	}
}
// Abstract class is a singleton pattern -> it means only a single object shall be created for inheritance in the background
/*class Shape{
	void draw(){
		System.out.println("Drawing a Shape");
	}
}*/

class Circle extends Shape{ // IS-A
	void draw(){
		System.out.println("Drawing a Circle");
	}
}

class Rectangle extends Shape{
	void draw(){
		System.out.println("Drawing a Rectangle");
	}
}

class Polygon extends Shape{
	void draw(){
		System.out.println("Drawing a Polygon");
	}
}

public class InfDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Shape s;
		
		s = new Circle();
		s.draw();
		
		s = new Rectangle();
		s.draw();
		
		s = new Polygon();
		s.draw();

	}

}
