package co.edureka;

class Thread1 extends Thread{ // Heavy Weight | Extra functions of thread class shall be inherited
	@Override
	public void run() {
		for(int i=1;i<=10;i++){
			System.out.println("**Thread1**");
		}
	}
}

class Thread2 implements Runnable{ // Light Weight | No extra functions will be inherited into your class
	@Override
	public void run() {
		for(int i=1;i<=10;i++){
			System.out.println("@@Thread2@@");
		}
	}
}

/*	A case where Runnable shall be preferred
 * class MyClass extends Exception implements Runnable{
	@Override
	public void run() {
		for(int i=1;i<=10;i++){
			System.out.println("@@Thread2@@");
		}
	}
}*/

public class Exe {
	// Main Thread | th1 | th2 -> thy shall run in parallel
	public static void main(String[] args) {	
		System.out.println("Main Thread Started");
		
		Thread1 th1 = new Thread1();
		Runnable r = new Thread2(); // Polymorphic Behavior
		
		Thread th2 = new Thread(r); // We are passing reference of the object into Thread's Constructor
		
		th1.start();
		th2.start();
		
		for(int i=1;i<=10;i++){
			System.out.println("--Main Thread--");
		}
		
		System.out.println("Name of th1 is: "+th1.getName());
		System.out.println("Name of th2 is: "+th2.getName());
		System.out.println("Name of main is: "+Thread.currentThread().getName());
		
		
		System.out.println("Main Thread Finished");
	}
}
